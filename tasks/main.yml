---
- name: set vars
  set_fact:
    docker_image: '{{ app_grafana_docker_image }}'
    docker_container: '{{ app_grafana_docker_container }}'
    docker_volume_config: '{{ app_grafana_docker_volume_config }}'
    docker_volume_data: '{{ app_grafana_docker_volume_data }}'
    docker_network: '{{ app_grafana_docker_network }}'
    tmp_dir: '{{ app_grafana_tmp_dir }}'

- name: Create grafana config volume
  community.docker.docker_volume:
    name: "{{ docker_volume_config }}"

- name: Create grafana data volume
  community.docker.docker_volume:
    name: "{{ docker_volume_data }}"

- name: Ensure image is pulled
  community.docker.docker_image:
    name: "{{ docker_image }}"
    source: pull
    force_source: yes
  register: pulled

- name: Remove container
  community.docker.docker_container:
    name: "{{ docker_container }}"
    state: absent
  when: pulled.changed

- name: Get infos on container
  community.docker.docker_container_info:
    name: "{{ docker_container }}"
  register: result

- name: Create grafana container
  community.docker.docker_container:
    image: "{{ docker_image }}"
    mounts:
     - source: "{{ docker_volume_config }}"
       target: /etc/grafana
     - source: "{{ docker_volume_data }}"
       target: /var/lib/grafana
    name: "{{ docker_container }}"
    networks:
     - name: "{{ docker_network }}"
    restart_policy: unless-stopped
    state: started
  when:
    pulled.changed
    or
    result.exists == false

- name: Create tmp grafana directorys
  ansible.builtin.file:
    path: "{{ tmp_dir }}/{{ item }}"
    state: directory
  with_items:
    - "config/provisioning/datasources"
    - "config/provisioning/dashboards"
    - "data/dashboards"
  when:
    result.exists == false

- name: Copy grafana datasources providers
  ansible.builtin.template:
    src: "config/provisioning/datasources/{{ item }}.yaml.j2"
    dest: "{{ tmp_dir }}/config/provisioning/datasources/{{ item }}.yaml"
  with_items:
    - "prometheus"
    - "loki"
  when:
    result.exists == false

- name: Copy grafana dashboard providers
  ansible.builtin.copy:
    src: "config/provisioning/dashboards/"
    dest: "{{ tmp_dir }}/config/provisioning/dashboards/"
  when:
    result.exists == false

- name: Copy grafana dashboard data
  ansible.builtin.copy:
    src: "data/dashboards/"
    dest: "{{ tmp_dir }}/data/dashboards/"
  when:
    result.exists == false

- name: Copy grafana config
  ansible.builtin.template:
    src: "grafana.ini.j2"
    dest: "{{ tmp_dir }}/config/grafana.ini"
  when:
    result.exists == false

- name: Copy config files into grafana container
  shell: docker cp {{ tmp_dir }}/config/. {{ docker_container }}:/etc/grafana
  when:
    result.exists == false

- name: Copy data files into grafana container
  shell: docker cp {{ tmp_dir }}/data/. {{ docker_container }}:/var/lib/grafana
  when:
    result.exists == false

- name: Remove tmp directory
  ansible.builtin.file:
    path: "{{ tmp_dir }}"
    state: absent
  when:
    result.exists == false

- name: Restart container
  community.docker.docker_container:
    name: "{{ docker_container }}"
    restart: yes
  when:
    result.exists == false
